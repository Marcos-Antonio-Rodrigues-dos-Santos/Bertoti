1° FRASE
"We see three critical differences between programming and software engineering: time, scale, and the trade-offs at play. On a software engineering project, engineers need to be more concerned with the passage of time and the eventual need for change. In a software engineering organization, we need to be more concerned about scale and efficiency, both for the software we produce as well as for the organization that is producing it. Finally, as software engineers, we are asked to make more complex decisions with higher-stakes outcomes, often based on imprecise estimates of time and growth."

1° RESPOSTA
Engenheiros de software no papel de lider dos projetos onde trabalham devem assim como lideres em outras áreas fazer decisões acertivas para guiar o time e o projeto na tentatica de prever mesmo que um pouco o caminho que 
o projeto tomará afim de coseguir o objetivo esperado no tempo esperado, mesmo não tendo todas as informações para isso. Olhando mais em específico para o projeto em sí, as decisões tomadas devem ser mais focadas nos problemas atuais, como resolvê-los e como essas mudanças afetarão as futuras atualizações do projeto. E nas organizações que estão realizando os projetos, as preocupações são na eficiência e nos custos dos indivíduos do projeto e das ferramentas usadas. 

2° FRASE
"Within Google, we sometimes say, “Software engineering is programming integrated over time.” Programming is certainly a significant part of software engineering: after all, programming is how you generate new software in the first place. If you accept this distinction, it also becomes clear that we might need to delineate between programming tasks (development) and software engineering tasks (development, modification, maintenance). The addition of time adds an important new dimension to programming. Cubes aren’t squares, distance isn’t velocity. Software engineering isn’t programming."

2° FRASE
Mesmo a programação sendo uma parte essencial da engenharia de software, ela não resume a totalidade dessa profissão. Assim como ao se construir um prédio o engenheiro civil deve pensar não só em como se construir, mas também em como manter em pé o prédio e como ele se manterá conforme for se basando o tempo, quando se está exercendo a uma "engenharia de software" devesse pensar em como aquele software, aplicativo isolado ou site irá se comportar conforme o tempo passa, pensando em formas de atualiza-lo e mante-lo conforme o tempo for passando e os problemas forem aparecendo.
